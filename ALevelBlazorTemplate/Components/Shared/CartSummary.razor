@using MyCheeseShop.Context
@using MyCheeseShop.Model
@inject ShoppingCart ShoppingCart
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore



<div>
    <table class="table" style="background-color: #00215E; vertical-align:middle;">
        <thead>
            <tr>
                <h2>
                <th scope="col">Items</th>
                </h2>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ShoppingCart.GetItems())
            {
                <div class="cardss mb-2" style="max-width: 1080px;">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <img src="/img/cheeses/@item.Cheese.ImageUrl" class="img-fluid rounded-start" />
                        </div>
                        <div class="col-md-5 mt-2">
                            <div class="card-body">
                                <h4 class="card-title">@item.Cheese.Name</h4>
                                <div>
                                    <p class="card-text"><strong>Price: </strong> @item.Cheese.Price.ToString("C")</p>
                                    <p class="card-text"><strong>Quantity: </strong>@(item.Quantity * 100)g</p>
                                    <p class="card-text"><strong>Total: </strong>@item.Total.ToString("C")</p>
                                   @if (IsEditable)
                                    {
                                        <td scope="auto">
                                            <button class="btn btn-outline-success mt-1 mt-md-0" @onclick="() => IncreaseQuantity(item)">Increase</button>
                                            <button class="btn btn-outline-primary mt-1 mt-md-0" @onclick="() => DecreaseQuantity(item)">Decrease</button>
                                            <button class="btn btn-outline-danger mt-1 mt-md-0" @onclick="() => RemoveItem(item)">Delete</button>
                                        </td>
                                    }

                                </div>
                            </div
                        </div>
                    </div>
                </div>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between">
    <div>
        <button @onclick="GoToStore" class="btn btn-light ">🧀 Back to cheeses</button>
    </div>
    <div>
        <h4>Total: @(ShoppingCart.Total().ToString("C"))</h4>
        <a @onclick="GoToCheckout" class="btn btn-light">💵 Checkout</a>
    </div>
</div>







@code {

    [Parameter]
    public bool IsEditable { get; set; } = false;



    protected override void OnInitialized()
    {
        ShoppingCart.OnCartUpdated += async () => await CartUpdated();
    }

    private void GoToCheckout()
    {
        NavigationManager.NavigateTo("/checkout");
    }


    private async Task CartUpdated()
    {
        StateHasChanged();
        await ProtectedSessionStore.SetAsync("cart", ShoppingCart.GetItems());
    }


    private void RemoveItem(CartItem item)
    {
        ShoppingCart.RemoveItem(item.Cheese);
    }



    private void IncreaseQuantity(CartItem item)
    {
        ShoppingCart.AddItem(item.Cheese, 1);
    }



    private void DecreaseQuantity(CartItem item)
    {
        ShoppingCart.RemoveItem(item.Cheese, 1);
    }


    private void GoToStore()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        StateHasChanged();
    }

}
